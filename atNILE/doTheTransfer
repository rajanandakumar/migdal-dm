#!/usr/bin/python3
import os, sys, time, subprocess

sys.path.append("..")
from db_interface import *
from configuration import *

di = mUtils()
lfn = sys.argv[1]  # "Logical file name"

status = miConf.checkVOMSProxy()
if status == -1:
    print("Alert - please renew proxy!")
if status == -2:
    print("Proxy too short for transfers ... aborting")
    sys.exit(-3)


mf = di.isFileInDB(lfn)  # Get the record from sqlite

cksum = mf.migChkSum
sFile = di.extractLocalPath(lfn, mf.migDisk)
dFile = miConf.dCachePath + lfn
tapeFile = miConf.antPath + lfn

print(f"Transferring {lfn} to PPD dCache ...")

# Transfer to dCache
command = f"gfal-copy -v -f -K adler32:{cksum} -r -p --checksum-mode both"
comm = f"{command} {sFile} {dFile}"
di.updateFileInDB(lfn, dCacheStatus="Ongoing")
runComm = subprocess.Popen(
    comm,
    shell=True,
    stdin=subprocess.PIPE,
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
    close_fds=True,
)
theInfo = runComm.communicate()
transferError = 0
for aa in theInfo:
    if "ERROR" in str(aa) or "Error" in str(aa) or "error" in str(aa):
        transferError = 1
        di.updateFileInDB(lfn, dCacheStatus="No")
        sys.exit(transferError)
print(f"File {lfn} successfully in dCache")
dCacheTime = datetime.datetime.fromtimestamp(time.time())
di.updateFileInDB(lfn, dCacheStatus="Yes", dCacheTime=dCacheTime)
